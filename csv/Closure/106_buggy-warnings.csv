"Warning Type","Code","Warning"
"Bad practice Warning","Dm","com.google.javascript.jscomp.AbstractCompilerRunner.run() invokes System.exit(...), which shuts down the entire virtual machine"
"Bad practice Warning","ES","Comparison of String objects using == or != in com.google.javascript.jscomp.VariableReferenceCheck$ReferenceCheckingBehavior.checkVar(NodeTraversal, Scope$Var, List)"
"Bad practice Warning","Eq","com.google.javascript.jscomp.DiagnosticType defines compareTo(DiagnosticType) and uses Object.equals()"
"Bad practice Warning","Eq","com.google.javascript.jscomp.NameAnalyzer$JsName defines compareTo(NameAnalyzer$JsName) and uses Object.equals()"
"Bad practice Warning","HE","com.google.javascript.jscomp.LinkedFlowScope defines equals and uses Object.hashCode()"
"Bad practice Warning","HE","com.google.javascript.jscomp.MustBeReachingVariableDef$Definition defines equals and uses Object.hashCode()"
"Bad practice Warning","HE","com.google.javascript.jscomp.MustBeReachingVariableDef$MustDef defines equals and uses Object.hashCode()"
"Bad practice Warning","HE","com.google.javascript.rhino.jstype.RecordType defines equals but not hashCode"
"Bad practice Warning","NP","com.google.javascript.jscomp.LiveVariablesAnalysis$LiveVariableLattice.equals(Object) does not check for null argument"
"Bad practice Warning","RV","Exceptional return value of java.io.File.mkdirs() ignored in com.google.javascript.jscomp.AbstractCompilerRunner.maybeCreateDirsForPath(String)"
"Bad practice Warning","Se","com.google.javascript.jscomp.BasicErrorManager$LeveledJSErrorComparator implements Comparator but not Serializable"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.Compiler$IntermediateState defines non-transient non-serializable instance field modules"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerInput defines non-transient non-serializable instance field module"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field cssRenamingMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.graph.StandardUnionFind defines non-transient non-serializable instance field elmap"
"Bad practice Warning","Se","Class com.google.javascript.rhino.JSDocInfo defines non-transient non-serializable instance field documentation"
"Bad practice Warning","Se","com.google.javascript.rhino.jstype.NoObjectType$GreatestSupertypeVisitor is serializable and an inner class"
"Bad practice Warning","Se","com.google.javascript.rhino.jstype.NoObjectType$LeastSupertypeVisitor is serializable and an inner class"
"Correctness Warning","IP","The parameter token to com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken) is dead upon entry but overwritten"
"Correctness Warning","NP","Possible null pointer dereference of addingRoot in com.google.javascript.jscomp.InstrumentFunctions$InstrumentCallback.visit(NodeTraversal, Node, Node)"
"Correctness Warning","NP","Possible null pointer dereference of addingRoot in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)"
"Correctness Warning","UwF","Unwritten field: com.google.javascript.rhino.RhinoException.interpreterStackInfo"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AbstractCompilerRunner.doRun(): new java.io.PrintStream(OutputStream)"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AbstractCompilerRunner.doRun(): new java.io.PrintStream(String)"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AbstractCompilerRunner.openExternExportsStream(CompilerOptions, String): new java.io.PrintStream(OutputStream)"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AbstractCompilerRunner.openSourceMapStream(CompilerOptions, String, String): new java.io.PrintStream(OutputStream)"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AliasStrings$StringInfo.encodeStringAsIdentifier(String, String): String.getBytes()"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.Compiler.instrumentFunctions(): new java.io.FileReader(String)"
"Dodgy code Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.PerformanceTracker$CodeSizeEstimatePrinter.append(String): String.getBytes()"
"Internationalization Warning","EI","com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.getReservedCharacters() may expose internal representation by returning AnonymousFunctionNamingPolicy.reservedCharacters"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getErrorManager() may expose internal representation by returning Compiler.errorManager"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getRoot() may expose internal representation by returning Compiler.externAndJsRoot"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getSourceMap() may expose internal representation by returning Compiler.sourceMap_"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getTypeRegistry() may expose internal representation by returning Compiler.typeRegistry"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getModule() may expose internal representation by returning CompilerInput.module"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getProvides(AbstractCompiler) may expose internal representation by returning CompilerInput.provides"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getRequires(AbstractCompiler) may expose internal representation by returning CompilerInput.requires"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getSourceAst() may expose internal representation by returning CompilerInput.ast"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes.getExports() may expose internal representation by returning FindExportableNodes.exports"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext.getContextNode() may expose internal representation by returning FindExportableNodes$GenerateNodeContext.contextNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext.getNode() may expose internal representation by returning FindExportableNodes$GenerateNodeContext.node"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext.getScriptNode() may expose internal representation by returning FindExportableNodes$GenerateNodeContext.scriptNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModule.getDependencies() may expose internal representation by returning JSModule.deps"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModule.getInputs() may expose internal representation by returning JSModule.inputs"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException.getDependentModule() may expose internal representation by returning JSModuleGraph$ModuleDependenceException.dependentModule"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException.getModule() may expose internal representation by returning JSModuleGraph$ModuleDependenceException.module"
"Internationalization Warning","EI","com.google.javascript.jscomp.JsAst.getAstRoot(AbstractCompiler) may expose internal representation by returning JsAst.root"
"Internationalization Warning","EI","com.google.javascript.jscomp.JsAst.getSourceFile() may expose internal representation by returning JsAst.sourceFile"
"Internationalization Warning","EI","com.google.javascript.jscomp.NodeTraversal.getCompiler() may expose internal representation by returning NodeTraversal.compiler"
"Internationalization Warning","EI","com.google.javascript.jscomp.NodeTraversal.getCurrentNode() may expose internal representation by returning NodeTraversal.curNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope.getRootNode() may expose internal representation by returning Scope.rootNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope.getTypeOfThis() may expose internal representation by returning Scope.thisType"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope$Var.getJSDocInfo() may expose internal representation by returning Scope$Var.info"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope$Var.getNameNode() may expose internal representation by returning Scope$Var.nameNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.graph.GraphColoring.getGraph() may expose internal representation by returning GraphColoring.graph"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getFirstChild() may expose internal representation by returning Node.first"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getLastChild() may expose internal representation by returning Node.last"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getNext() may expose internal representation by returning Node.next"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getParent() may expose internal representation by returning Node.parent"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.removeFirstChild() may expose internal representation by returning Node.first"
"Internationalization Warning","EI","com.google.javascript.rhino.Parser.getTypeRegistry() may expose internal representation by returning Parser.typeRegistry"
"Internationalization Warning","EI","com.google.javascript.rhino.Parser.initForUnitTest(Reader, String, int, boolean) may expose internal representation by returning Parser.ts"
"Internationalization Warning","EI","com.google.javascript.rhino.SimpleErrorReporter.errors() may expose internal representation by returning SimpleErrorReporter.errors"
"Internationalization Warning","EI","com.google.javascript.rhino.SimpleErrorReporter.warnings() may expose internal representation by returning SimpleErrorReporter.warnings"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.EnumType.getElementsType() may expose internal representation by returning EnumType.elementsType"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionParamBuilder.build() may expose internal representation by returning FunctionParamBuilder.root"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionPrototypeType.getOwnerFunction() may expose internal representation by returning FunctionPrototypeType.ownerFunction"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getInstanceType() may expose internal representation by returning FunctionType.typeOfThis"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getPrototype() may expose internal representation by returning FunctionType.prototype"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getSource() may expose internal representation by returning FunctionType.source"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getSubTypes() may expose internal representation by returning FunctionType.subTypes"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.InstanceObjectType.getConstructor() may expose internal representation by returning InstanceObjectType.constructor"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.JSTypeRegistry.getType(String) may expose internal representation by returning JSTypeRegistry.templateType"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.NamedType.getReferencedType() may expose internal representation by returning ProxyObjectType.referencedType"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.ObjectType.getJSDocInfo() may expose internal representation by returning ObjectType.docInfo"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.UnionType.getAlternates() may expose internal representation by returning UnionType.alternates"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.AbstractCompilerRunner(String[], PrintStream, PrintStream) may expose internal representation by storing an externally mutable object into AbstractCompilerRunner.err"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.AbstractCompilerRunner(String[], PrintStream, PrintStream) may expose internal representation by storing an externally mutable object into AbstractCompilerRunner.out"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.init(JSSourceFile[], JSModule[], CompilerOptions) may expose internal representation by storing an externally mutable object into Compiler.modules_"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.init(JSSourceFile[], JSModule[], CompilerOptions) may expose internal representation by storing an externally mutable object into Compiler.options_"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.init(JSSourceFile[], JSSourceFile[], CompilerOptions) may expose internal representation by storing an externally mutable object into Compiler.options_"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.setErrorManager(ErrorManager) may expose internal representation by storing an externally mutable object into Compiler.errorManager"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.setPassConfig(PassConfig) may expose internal representation by storing an externally mutable object into Compiler.passes"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.CompilerInput(SourceAst, String, boolean) may expose internal representation by storing an externally mutable object into CompilerInput.ast"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerInput.setModule(JSModule) may expose internal representation by storing an externally mutable object into CompilerInput.module"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes(AbstractCompiler) may expose internal representation by storing an externally mutable object into FindExportableNodes.compiler"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext(Node, Node, Node) may expose internal representation by storing an externally mutable object into FindExportableNodes$GenerateNodeContext.contextNode"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext(Node, Node, Node) may expose internal representation by storing an externally mutable object into FindExportableNodes$GenerateNodeContext.node"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext(Node, Node, Node) may expose internal representation by storing an externally mutable object into FindExportableNodes$GenerateNodeContext.scriptNode"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.JsAst(SourceFile) may expose internal representation by storing an externally mutable object into JsAst.sourceFile"
"Internationalization Warning","EI2","com.google.javascript.jscomp.JsAst.setSourceFile(SourceFile) may expose internal representation by storing an externally mutable object into JsAst.sourceFile"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.LoggerErrorManager(MessageFormatter, Logger) may expose internal representation by storing an externally mutable object into LoggerErrorManager.logger"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.NodeTraversal(AbstractCompiler, NodeTraversal$Callback, ScopeCreator) may expose internal representation by storing an externally mutable object into NodeTraversal.compiler"
"Internationalization Warning","EI2","com.google.javascript.jscomp.NodeTraversal.traverse(Node) may expose internal representation by storing an externally mutable object into NodeTraversal.curNode"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.NodeTraversal$AbstractNodeTypePruningCallback(Set, boolean) may expose internal representation by storing an externally mutable object into NodeTraversal$AbstractNodeTypePruningCallback.nodeTypes"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.PassConfig(CompilerOptions) may expose internal representation by storing an externally mutable object into PassConfig.options"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.PrintStreamErrorManager(MessageFormatter, PrintStream) may expose internal representation by storing an externally mutable object into PrintStreamErrorManager.stream"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.ShowByPathWarningsGuard(String[], ShowByPathWarningsGuard$ShowType) may expose internal representation by storing an externally mutable object into ShowByPathWarningsGuard.paths"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.TypeCheck(AbstractCompiler, ReverseAbstractInterpreter, JSTypeRegistry, Scope, ScopeCreator, CheckLevel, CheckLevel) may expose internal representation by storing an externally mutable object into TypeCheck.compiler"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.TypeCheck(AbstractCompiler, ReverseAbstractInterpreter, JSTypeRegistry, Scope, ScopeCreator, CheckLevel, CheckLevel) may expose internal representation by storing an externally mutable object into TypeCheck.typeRegistry"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.graph.GraphColoring(AdjacencyGraph) may expose internal representation by storing an externally mutable object into GraphColoring.graph"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.graph.GraphReachability(DiGraph) may expose internal representation by storing an externally mutable object into GraphReachability.graph"
"Internationalization Warning","EI2","new com.google.javascript.rhino.JSTypeExpression(Node, String, JSTypeRegistry) may expose internal representation by storing an externally mutable object into JSTypeExpression.registry"
"Internationalization Warning","EI2","new com.google.javascript.rhino.JSTypeExpression(Node, String, JSTypeRegistry) may expose internal representation by storing an externally mutable object into JSTypeExpression.root"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildAfter(Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildBefore(Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToBack(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToBack(Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToFront(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToFront(Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildrenToBack(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildrenToFront(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.removeChildAfter(Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.replaceChild(Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.replaceChild(Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.replaceChildAfter(Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node$FileLevelJsDocBuilder(Node) may expose internal representation by storing an externally mutable object into Node$FileLevelJsDocBuilder.this$0"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Parser(CompilerEnvirons, ErrorReporter, JSTypeRegistry) may expose internal representation by storing an externally mutable object into Parser.compilerEnv"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Parser(CompilerEnvirons, ErrorReporter, JSTypeRegistry) may expose internal representation by storing an externally mutable object into Parser.typeRegistry"
"Internationalization Warning","EI2","new com.google.javascript.rhino.TokenStream(Parser, Reader, String, int) may expose internal representation by storing an externally mutable object into TokenStream.parser"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.FunctionParamBuilder(JSTypeRegistry) may expose internal representation by storing an externally mutable object into FunctionParamBuilder.registry"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionType.setPrototype(FunctionPrototypeType) may expose internal representation by storing an externally mutable object into FunctionType.prototype"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionType.setSource(Node) may expose internal representation by storing an externally mutable object into FunctionType.source"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.ObjectType.setJSDocInfo(JSDocInfo) may expose internal representation by storing an externally mutable object into ObjectType.docInfo"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.RecordTypeBuilder(JSTypeRegistry) may expose internal representation by storing an externally mutable object into RecordTypeBuilder.registry"
"Internationalization Warning","MS","com.google.javascript.jscomp.DiagnosticGroups.ACCESS_CONTROLS isn't final but should be"
"Internationalization Warning","MS","com.google.javascript.jscomp.DiagnosticGroups.DEPRECATED isn't final but should be"
"Internationalization Warning","MS","com.google.javascript.jscomp.DiagnosticGroups.NON_STANDARD_JSDOC isn't final but should be"
"Internationalization Warning","MS","com.google.javascript.jscomp.DiagnosticGroups.UNDEFINED_VARIABLES isn't final but should be"
"Internationalization Warning","MS","com.google.javascript.jscomp.DiagnosticGroups.VISIBILITY isn't final but should be"
"Malicious code vulnerability Warning","IS","Inconsistent synchronization of com.google.javascript.jscomp.ParallelCompilerPass.worklist; locked 66% of time"
"Malicious code vulnerability Warning","IS","Inconsistent synchronization of com.google.javascript.jscomp.SymbolTable.locked; locked 66% of time"
"Multithreaded correctness Warning","Bx","com.google.javascript.jscomp.CompilerOptions.setDefineToNumberLiteral(String, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead"
"Multithreaded correctness Warning","Bx","com.google.javascript.rhino.Context.setLanguageVersion(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead"
"Multithreaded correctness Warning","Bx","Boxing/unboxing to parse a primitive com.google.javascript.rhino.ScriptRuntime.stringToNumber(String, int, int)"
"Multithreaded correctness Warning","Bx","Boxing/unboxing to parse a primitive com.google.javascript.rhino.TokenStream.getToken()"
"Multithreaded correctness Warning","Dm","com.google.javascript.jscomp.CompilerOptions.setDefineToBooleanLiteral(String, boolean) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead"
"Multithreaded correctness Warning","SBSC","com.google.javascript.jscomp.NameGenerator.generateNextName() concatenates strings using + in a loop"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.AmbiguateProperties$PropertyGraphNode be a _static_ inner class?"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.AnalyzePrototypeProperties$GlobalFunction be a _static_ inner class?"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.CrossModuleCodeMotion$Declaration be a _static_ inner class?"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.InlineVariables$IdentifyConstants be a _static_ inner class?"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.Normalize$ScopeTicklingCallback be a _static_ inner class?"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.ProcessClosurePrimitives$UnrecognizedRequire be a _static_ inner class?"
"Multithreaded correctness Warning","SIC","Should com.google.javascript.jscomp.RenameProperties$Property be a _static_ inner class?"
"Multithreaded correctness Warning","UrF","Unread field: com.google.javascript.jscomp.RenamePrototypes$Property.input"
"Multithreaded correctness Warning","UrF","Unread field: com.google.javascript.jscomp.SourceMap$LineMapping.lineNumber"
"Multithreaded correctness Warning","UuF","Unused field: com.google.javascript.rhino.Context.instructionCount"
"Multithreaded correctness Warning","UuF","Unused field: com.google.javascript.rhino.Context.interpreterSecurityDomain"
"Multithreaded correctness Warning","UuF","Unused field: com.google.javascript.rhino.Context.iterating"
"Multithreaded correctness Warning","UuF","Unused field: com.google.javascript.rhino.Context.lastInterpreterFrame"
"Multithreaded correctness Warning","UuF","Unused field: com.google.javascript.rhino.Context.previousInterpreterInvocations"
"Multithreaded correctness Warning","UuF","Unused field: com.google.javascript.rhino.Context.useDynamicScope"
"Multithreaded correctness Warning","WMI","com.google.javascript.jscomp.AliasStrings.outputStringUsage() makes inefficient use of keySet iterator instead of entrySet iterator"
"Multithreaded correctness Warning","WMI","com.google.javascript.jscomp.CheckProvides$CheckProvidesCallback.visitScriptNode(NodeTraversal, Node) makes inefficient use of keySet iterator instead of entrySet iterator"
"Multithreaded correctness Warning","WMI","com.google.javascript.jscomp.RenameProperties.process(Node, Node) makes inefficient use of keySet iterator instead of entrySet iterator"
"Multithreaded correctness Warning","WMI","new com.google.javascript.rhino.jstype.RecordType(JSTypeRegistry, Map) makes inefficient use of keySet iterator instead of entrySet iterator"
"Multithreaded correctness Warning","WMI","com.google.javascript.rhino.jstype.RecordType.toString() makes inefficient use of keySet iterator instead of entrySet iterator"
"Performance Warning","BC","instanceof will always return true for all non-null values in com.google.javascript.jscomp.FunctionTypeBuilder.inferInheritance(JSDocInfo), since all com.google.javascript.rhino.jstype.FunctionType are instances of com.google.javascript.rhino.jstype.FunctionType"
"Performance Warning","DLS","Dead store to rhs in com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to greatGreatGramps in com.google.javascript.jscomp.CollapseProperties.updateSimpleDeclaration(String, GlobalNamespace$Ref)"
"Performance Warning","DLS","Dead store to scope in com.google.javascript.jscomp.DisambiguateProperties.process(Node, Node)"
"Performance Warning","DLS","Dead store to extractedConditional in com.google.javascript.jscomp.ExpressionDecomposer.exposeExpression(Node, Node)"
"Performance Warning","DLS","Dead store to defs in com.google.javascript.jscomp.FlowSensitiveInlineVariables$GatherCandiates.visit(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to newCode in com.google.javascript.jscomp.InlineFunctions$Inline.inlineFunction(NodeTraversal, Node, InlineFunctions$FunctionState, FunctionInjector$InliningMode)"
"Performance Warning","DLS","Dead store to scope in com.google.javascript.jscomp.MakeDeclaredNamesUnique$ContextualRenameInverter.visit(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to functionType in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to outerThis in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to info in com.google.javascript.jscomp.TypeCheck.visitFunction(NodeTraversal, Node)"
"Performance Warning","DLS","Dead store to body in com.google.javascript.jscomp.TypedScopeCreator$LocalScopeBuilder.declareArguments(Node)"
"Performance Warning","DLS","Dead store to uNode in com.google.javascript.jscomp.graph.LinkedUndirectedGraph.getNeighborNodes(Object)"
"Performance Warning","DLS","Dead store to token in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken)"
"Performance Warning","DLS","Dead store to keys rather than field with same name in com.google.javascript.rhino.UintMap.ensureIndex(int, boolean)"
"Performance Warning","DLS","Dead store to arrayPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to booleanPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to datePrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to numberPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to regexpPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to stringPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","Eq","com.google.javascript.rhino.jstype.IndexedType doesn't override ProxyObjectType.equals(Object)"
"Performance Warning","Eq","com.google.javascript.rhino.jstype.ParameterizedType doesn't override ProxyObjectType.equals(Object)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.graph.LinkedDirectedGraph.getDirectedPredNodes(DiGraph$DiGraphNode)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.graph.LinkedDirectedGraph.getDirectedSuccNodes(DiGraph$DiGraphNode)"
"Performance Warning","RCN","Redundant nullcheck of leftType, which is known to be non-null in com.google.javascript.jscomp.SemanticReverseAbstractInterpreter.caseAndOrNotShortCircuiting(Node, Node, FlowScope, boolean)"
"Performance Warning","RCN","Redundant nullcheck of com.google.javascript.rhino.RhinoException.sourceName, which is known to be non-null in com.google.javascript.rhino.RhinoException.getMessage()"
"Performance Warning","RV","Return value of com.google.javascript.rhino.jstype.StaticSlot.getType() ignored, but method has no side effect"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.AliasExternals$GetAliasableNames.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.AmbiguateProperties$ProcessProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.AnonymousFunctionNamingCallback.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckAccessControls.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckProvides$CheckProvidesCallback.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckRequiresForConstructors$CheckRequiresForConstructorsCallback.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CollapseProperties.updateObjLitOrFunctionDeclaration(GlobalNamespace$Name, String) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.Compiler.optimize() where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CompilerInput$DepsFinder.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ControlFlowAnalysis.shouldTraverse(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ConvertToDottedProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ExternExportsPass.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FindExportableNodes.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FoldConstants.makeForwardSlashBracketSafe(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FoldConstants.tryMinimizeCondition(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FoldConstants.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FunctionArgumentInjector.gatherLocalNames(Node, Set) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FunctionCheck$ArgCheck.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.GlobalNamespace$BuildGlobalNamespace.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InferJSDocInfo.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InlineFunctions$CallVisitor.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InlineFunctions$FindAnonymousFunctionCalls.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InlineFunctions$FindCandidateFunctions.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.LoggerErrorManager.println(CheckLevel, JSError) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MakeDeclaredNamesUnique.shouldTraverse(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MakeDeclaredNamesUnique.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MethodCompilerPass$GatherSignatures.processPrototypeParent(NodeTraversal, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MinimizeExitPoints.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.NameAnalyzer$JsNameRefNode.remove() where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.NameReferenceGraphConstruction$Traversal.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.Normalize.extractForInitializer(Node, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.Normalize.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ProcessClosurePrimitives.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ProcessDefines$CollectDefines.updateAssignAllowedStack(Node, boolean) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RemoveUnusedVars.traverseNode(Node, Node, Scope) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RenameLabels$ProcessLabels.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RenameProperties$ProcessProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RenamePrototypes$ProcessExternedProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.StripCode$Strip.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.SuspiciousPropertiesCheck$ProcessExternedProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.SyntacticScopeCreator.scanVars(Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TightenTypes$CreateScope.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeInference.branchedFlowThrough(Node, FlowScope) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeInference.traverse(Node, FlowScope) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeInference.updateScopeForTypeChange(FlowScope, Node, JSType, JSType) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$GlobalScopeBuilder.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$GlobalScopeBuilder$CollectProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$LocalScopeBuilder.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.parsing.JsDocInfoParser.parse() where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.parsing.JsDocTokenStream.getJsDocToken() where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.DToA.JS_dtoa(double, int, boolean, int, boolean[], StringBuffer) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.DToA.JS_dtostr(StringBuffer, int, int, double) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.DToA.JS_dtoa(double, int, boolean, int, boolean[], StringBuffer) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.DToA.JS_dtostr(StringBuffer, int, int, double) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.Decompiler.decompile(String, int, UintMap) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.IRFactory.createBinary(int, Node, Node, int, int) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.Parser.primaryExpr() where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.ScriptRuntime.stringToNumber(String, int, int) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.ScriptRuntime.escapeString(String, char) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.ScriptRuntime.stringToNumber(String, int, int) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.TokenStream.getJSDocToken() where default case is missing"
"Performance Warning","ST","Write to static field com.google.javascript.rhino.Context.implementationVersion from instance method com.google.javascript.rhino.Context.getImplementationVersion()"
"Performance Warning","UrF","Unread public/protected field: com.google.javascript.rhino.JSDocInfo$TypePosition.hasBrackets"
