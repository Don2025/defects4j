"Warning Type","Code","Warning"
"Bad practice Warning","CN","com.google.debugging.sourcemap.proto.Mapping$LineMapping$Builder defines clone() but doesn't implement Cloneable"
"Bad practice Warning","CN","com.google.debugging.sourcemap.proto.Mapping$OriginalMapping$Builder defines clone() but doesn't implement Cloneable"
"Bad practice Warning","CN","com.google.javascript.jscomp.FunctionInformationMap$Builder defines clone() but doesn't implement Cloneable"
"Bad practice Warning","CN","com.google.javascript.jscomp.FunctionInformationMap$Entry$Builder defines clone() but doesn't implement Cloneable"
"Bad practice Warning","CN","com.google.javascript.jscomp.FunctionInformationMap$Module$Builder defines clone() but doesn't implement Cloneable"
"Bad practice Warning","CN","com.google.javascript.jscomp.Instrumentation$Builder defines clone() but doesn't implement Cloneable"
"Bad practice Warning","Dm","com.google.javascript.jscomp.AbstractCommandLineRunner.run() invokes System.exit(...), which shuts down the entire virtual machine"
"Bad practice Warning","ES","Comparison of String objects using == or != in com.google.debugging.sourcemap.SourceMapGeneratorV1$MappingWriter.appendMappingTo(SourceMapGeneratorV1$Mapping, Appendable)"
"Bad practice Warning","ES","Comparison of String parameter using == or != in com.google.debugging.sourcemap.SourceMapGeneratorV2.getSourceId(String)"
"Bad practice Warning","ES","Comparison of String parameter using == or != in com.google.debugging.sourcemap.SourceMapGeneratorV3.getSourceId(String)"
"Bad practice Warning","ES","Comparison of String objects using == or != in com.google.javascript.jscomp.AbstractCommandLineRunner.outputModuleGraphJson()"
"Bad practice Warning","Eq","com.google.javascript.jscomp.NameAnalyzer$JsName defines compareTo(NameAnalyzer$JsName) and uses Object.equals()"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.AbstractCommandLineRunner.printModuleGraphManifestOrBundleTo(JSModuleGraph, Appendable, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeGarbageCollectionStats(PrintStream, boolean, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeGarbageCollectionStats(PrintStream, boolean, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeGarbageCollectionStats(PrintStream, boolean, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeGarbageCollectionStats(PrintStream, boolean, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeGarbageCollectionStats(PrintStream, boolean, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeMemoryMetrics(PrintStream, boolean, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeOverallMemoryUsage(PrintStream, MemoryUsage, String, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeOverallMemoryUsage(PrintStream, MemoryUsage, String, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writeOverallMemoryUsage(PrintStream, MemoryUsage, String, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writePoolMemoryUsage(PrintStream, MemoryUsage, MemoryUsage, String, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writePoolMemoryUsage(PrintStream, MemoryUsage, MemoryUsage, String, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.JvmMetrics.writePoolMemoryUsage(PrintStream, MemoryUsage, MemoryUsage, String, boolean)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.SymbolTable.toDebugString(StringBuilder, SymbolTable$Symbol)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.SymbolTable.toDebugString(StringBuilder, SymbolTable$Symbol)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.SymbolTable.toDebugString(StringBuilder, SymbolTable$Symbol)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.SymbolTable.toDebugString(StringBuilder, SymbolTable$Symbol)"
"Bad practice Warning","FS","Format string should use %n rather than \n in com.google.javascript.jscomp.SymbolTable.toDebugString(StringBuilder, SymbolTable$Symbol)"
"Bad practice Warning","HE","com.google.javascript.jscomp.LinkedFlowScope defines equals and uses Object.hashCode()"
"Bad practice Warning","HE","com.google.javascript.jscomp.MustBeReachingVariableDef$Definition defines equals and uses Object.hashCode()"
"Bad practice Warning","HE","com.google.javascript.jscomp.MustBeReachingVariableDef$MustDef defines equals and uses Object.hashCode()"
"Bad practice Warning","HE","com.google.javascript.jscomp.deps.SimpleDependencyInfo defines equals and uses Object.hashCode()"
"Bad practice Warning","IC","Initialization of com.google.javascript.jscomp.regex.RegExpTree accesses class com.google.javascript.jscomp.regex.RegExpTree$Empty, which isn't initialized yet"
"Bad practice Warning","NP","com.google.javascript.jscomp.LiveVariablesAnalysis$LiveVariableLattice.equals(Object) does not check for null argument"
"Bad practice Warning","RV","Exceptional return value of java.io.File.mkdirs() ignored in com.google.javascript.jscomp.AbstractCommandLineRunner.maybeCreateDirsForPath(String)"
"Bad practice Warning","Se","com.google.javascript.jscomp.BasicErrorManager$LeveledJSErrorComparator implements Comparator but not Serializable"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field inputAnonymousFunctionNamingMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field inputPropertyMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field inputVariableMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field replaceStringsInputMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field sourceMapLocationMappings"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.CompilerOptions defines non-transient non-serializable instance field cssRenamingMap"
"Bad practice Warning","Se","The field com.google.javascript.jscomp.CompilerOptions.aliasHandler is transient but isn't set by deserialization"
"Bad practice Warning","Se","The field com.google.javascript.jscomp.JsAst.inputId is transient but isn't set by deserialization"
"Bad practice Warning","Se","The field com.google.javascript.jscomp.JsAst.sourceFile is transient but isn't set by deserialization"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.PassConfig$State defines non-transient non-serializable instance field anonymousFunctionNameMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.PassConfig$State defines non-transient non-serializable instance field propertyMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.PassConfig$State defines non-transient non-serializable instance field stringMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.PassConfig$State defines non-transient non-serializable instance field variableMap"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.SourceFile$Generated defines non-transient non-serializable instance field generator"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.SymbolTable$Symbol defines non-transient non-serializable instance field declaration"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.SymbolTable$Symbol defines non-transient non-serializable instance field docScope"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.SymbolTable$Symbol defines non-transient non-serializable instance field propertyScope"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.SymbolTable$Symbol defines non-transient non-serializable instance field references"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.SymbolTable$Symbol defines non-transient non-serializable instance field scope"
"Bad practice Warning","Se","Class com.google.javascript.jscomp.graph.StandardUnionFind defines non-transient non-serializable instance field elmap"
"Bad practice Warning","Se","Class com.google.javascript.rhino.JSDocInfo defines non-transient non-serializable instance field documentation"
"Bad practice Warning","Se","Class com.google.javascript.rhino.jstype.NamedType defines non-transient non-serializable instance field propertyContinuations"
"Correctness Warning","Eq","com.google.javascript.jscomp.Scope$Arguments overrides equals in Scope$Var and may not be symmetric"
"Correctness Warning","INT","Bad comparison of nonnegative value with 0 in com.google.debugging.sourcemap.SourceMapConsumerV3.getMappingForLine(int, int)"
"Correctness Warning","INT","Bad comparison of nonnegative value with 0 in com.google.javascript.jscomp.regex.CharRanges.minSetBit()"
"Correctness Warning","IP","The parameter token to com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken) is dead upon entry but overwritten"
"Correctness Warning","NP","Null passed for non-null parameter of ProcessCommonJSModules.toModuleName(String) in com.google.javascript.jscomp.CommandLineRunner.initConfigFromFlags(String[], PrintStream)"
"Correctness Warning","NP","Possible null pointer dereference of addingRoot in com.google.javascript.jscomp.InstrumentFunctions$InstrumentCallback.visit(NodeTraversal, Node, Node)"
"Correctness Warning","NP","Possible null pointer dereference of addingRoot in com.google.javascript.jscomp.NodeUtil.getAddingRoot(Node)"
"Correctness Warning","NP","Null passed for non-null parameter of addMarker(FunctionType, Node, ObjectType) in com.google.javascript.jscomp.RuntimeTypeCheck$AddMarkers.visitFunction(NodeTraversal, Node)"
"Correctness Warning","NP","Possible null pointer dereference of TightenTypes$NativeCallFunctionCall.firstArgument in com.google.javascript.jscomp.TightenTypes$NativeCallFunctionCall.getAssignments(TightenTypes$ConcreteScope)"
"Correctness Warning","NP","Possible null pointer dereference of callback in com.google.javascript.jscomp.TransformAMDToCJSModule$TransformAMDModulesCallback.visit(NodeTraversal, Node, Node)"
"Correctness Warning","NP","Possible null pointer dereference of objectJsType in com.google.javascript.jscomp.TypeCheck.visitAssign(NodeTraversal, Node)"
"Correctness Warning","NP","Possible null pointer dereference of null in com.google.javascript.rhino.jstype.ProxyObjectType.hasReferenceName()"
"Correctness Warning","NP","Possible null pointer dereference of SimpleReference.node in com.google.javascript.rhino.jstype.SimpleReference.toString()"
"Correctness Warning","RCN","Nullcheck of enclosingQname at line 424 of value previously dereferenced in com.google.javascript.jscomp.ProcessClosurePrimitives.processBaseClassCall(NodeTraversal, Node)"
"Correctness Warning","RCN","Nullcheck of parent at line 60 of value previously dereferenced in com.google.javascript.jscomp.RemoveUnusedClassProperties.removeUnused()"
"Correctness Warning","RCN","Nullcheck of typeParameter at line 1093 of value previously dereferenced in com.google.javascript.jscomp.TypeInference.maybeResolveTemplatedType(JSType, JSType, Map)"
"Correctness Warning","RCN","Nullcheck of fnNode at line 107 of value previously dereferenced in com.google.javascript.jscomp.TypedCodeGenerator.getFunctionAnnotation(Node)"
"Correctness Warning","RCN","Nullcheck of objLitType at line 694 of value previously dereferenced in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.processObjectLitProperties(Node, ObjectType, boolean)"
"Correctness Warning","RCN","Nullcheck of node2 at line 1435 of value previously dereferenced in com.google.javascript.rhino.Node.checkTreeEqualsImpl(Node)"
"Dodgy code Warning","OBL","com.google.javascript.jscomp.CommandLineRunner.getDefaultExterns() may fail to clean up java.io.InputStream on checked exception"
"Dodgy code Warning","OBL","com.google.javascript.jscomp.DefaultPassConfig$97$1.process(Node, Node) may fail to clean up java.io.Reader"
"Dodgy code Warning","OBL","com.google.javascript.jscomp.deps.DepsFileParser.parseFile(String) may fail to clean up java.io.Reader"
"Dodgy code Warning","OBL","com.google.javascript.jscomp.deps.JsFileParser.parseFile(String, String) may fail to clean up java.io.Reader"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AbstractCommandLineRunner.streamToLegacyOutputWriter(OutputStream): new java.io.OutputStreamWriter(OutputStream)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AbstractCommandLineRunner.streamToOutputWriter2(OutputStream): new java.io.OutputStreamWriter(OutputStream)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.AliasStrings$StringInfo.encodeStringAsIdentifier(String, String): String.getBytes()"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.DefaultPassConfig$97$1.process(Node, Node): new java.io.FileReader(String)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.JsMessage$Hash.hash64(String, long): String.getBytes()"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.PerformanceTracker.outputTracerReport(PrintStream): new java.io.OutputStreamWriter(OutputStream)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.PerformanceTracker$CodeSizeEstimatePrinter.append(String): String.getBytes()"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.SourceFile$OnDisk.getCodeReader(): new java.io.FileReader(File)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.WhitelistWarningsGuard$WhitelistBuilder.writeWhitelist(File): new java.io.PrintStream(File)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.deps.DepsFileParser.parseFile(String): new java.io.FileReader(String)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.deps.DepsGenerator.computeDependencyCalls(): new java.io.PrintStream(OutputStream)"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.deps.DepsGenerator.computeDependencyCalls(): new String(byte[])"
"Experimental Warning","Dm","Found reliance on default encoding in com.google.javascript.jscomp.deps.JsFileParser.parseFile(String, String): new java.io.FileReader(String)"
"Internationalization Warning","EI","com.google.debugging.sourcemap.proto.Mapping$LineMapping.getDefaultInstanceForType() may expose internal representation by returning Mapping$LineMapping.defaultInstance"
"Internationalization Warning","EI","com.google.debugging.sourcemap.proto.Mapping$LineMapping.getOriginalMapping() may expose internal representation by returning Mapping$LineMapping.originalMapping_"
"Internationalization Warning","EI","com.google.debugging.sourcemap.proto.Mapping$LineMapping.getOriginalMappingOrBuilder() may expose internal representation by returning Mapping$LineMapping.originalMapping_"
"Internationalization Warning","EI","com.google.debugging.sourcemap.proto.Mapping$LineMapping$Builder.getOriginalMapping() may expose internal representation by returning Mapping$LineMapping$Builder.originalMapping_"
"Internationalization Warning","EI","com.google.debugging.sourcemap.proto.Mapping$LineMapping$Builder.getOriginalMappingOrBuilder() may expose internal representation by returning Mapping$LineMapping$Builder.originalMapping_"
"Internationalization Warning","EI","com.google.debugging.sourcemap.proto.Mapping$OriginalMapping.getDefaultInstanceForType() may expose internal representation by returning Mapping$OriginalMapping.defaultInstance"
"Internationalization Warning","EI","com.google.javascript.jscomp.AnonymousFunctionNamingPolicy.getReservedCharacters() may expose internal representation by returning AnonymousFunctionNamingPolicy.reservedCharacters"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph.getMainFunction() may expose internal representation by returning CallGraph.mainFunction"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Callsite.getAstNode() may expose internal representation by returning CallGraph$Callsite.astNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Callsite.getContainingFunction() may expose internal representation by returning CallGraph$Callsite.containingFunction"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Callsite.getPossibleTargets() may expose internal representation by returning CallGraph$Callsite.possibleTargets"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Function.getAstNode() may expose internal representation by returning CallGraph$Function.astNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Function.getBodyNode() may expose internal representation by returning CallGraph$Function.astNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Function.getCallsitesInFunction() may expose internal representation by returning CallGraph$Function.callsitesInFunction"
"Internationalization Warning","EI","com.google.javascript.jscomp.CallGraph$Function.getCallsitesPossiblyTargetingFunction() may expose internal representation by returning CallGraph$Function.callsitesPossiblyTargetingFunction"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getErrorManager() may expose internal representation by returning Compiler.errorManager"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getRoot() may expose internal representation by returning Compiler.externAndJsRoot"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getSourceMap() may expose internal representation by returning Compiler.sourceMap"
"Internationalization Warning","EI","com.google.javascript.jscomp.Compiler.getTypeRegistry() may expose internal representation by returning Compiler.typeRegistry"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getAst() may expose internal representation by returning CompilerInput.ast"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getModule() may expose internal representation by returning CompilerInput.module"
"Internationalization Warning","EI","com.google.javascript.jscomp.CompilerInput.getSourceAst() may expose internal representation by returning CompilerInput.ast"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes.getExports() may expose internal representation by returning FindExportableNodes.exports"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext.getContextNode() may expose internal representation by returning FindExportableNodes$GenerateNodeContext.contextNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext.getNode() may expose internal representation by returning FindExportableNodes$GenerateNodeContext.node"
"Internationalization Warning","EI","com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext.getScriptNode() may expose internal representation by returning FindExportableNodes$GenerateNodeContext.scriptNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap.getDefaultInstanceForType() may expose internal representation by returning FunctionInformationMap.defaultInstance"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap.getEntryList() may expose internal representation by returning FunctionInformationMap.entry_"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap.getEntryOrBuilderList() may expose internal representation by returning FunctionInformationMap.entry_"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap.getModuleList() may expose internal representation by returning FunctionInformationMap.module_"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap.getModuleOrBuilderList() may expose internal representation by returning FunctionInformationMap.module_"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap$Entry.getDefaultInstanceForType() may expose internal representation by returning FunctionInformationMap$Entry.defaultInstance"
"Internationalization Warning","EI","com.google.javascript.jscomp.FunctionInformationMap$Module.getDefaultInstanceForType() may expose internal representation by returning FunctionInformationMap$Module.defaultInstance"
"Internationalization Warning","EI","com.google.javascript.jscomp.Instrumentation.getDefaultInstanceForType() may expose internal representation by returning Instrumentation.defaultInstance"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModule.getDependencies() may expose internal representation by returning JSModule.deps"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModule.getInputs() may expose internal representation by returning JSModule.inputs"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException.getDependentModule() may expose internal representation by returning JSModuleGraph$ModuleDependenceException.dependentModule"
"Internationalization Warning","EI","com.google.javascript.jscomp.JSModuleGraph$ModuleDependenceException.getModule() may expose internal representation by returning JSModuleGraph$ModuleDependenceException.module"
"Internationalization Warning","EI","com.google.javascript.jscomp.JsAst.getAstRoot(AbstractCompiler) may expose internal representation by returning JsAst.root"
"Internationalization Warning","EI","com.google.javascript.jscomp.JsAst.getSourceFile() may expose internal representation by returning JsAst.sourceFile"
"Internationalization Warning","EI","com.google.javascript.jscomp.JsMessage$Builder.getParts() may expose internal representation by returning JsMessage$Builder.parts"
"Internationalization Warning","EI","com.google.javascript.jscomp.JsMessage$Builder.getPlaceholders() may expose internal representation by returning JsMessage$Builder.placeholders"
"Internationalization Warning","EI","com.google.javascript.jscomp.NodeTraversal.getCompiler() may expose internal representation by returning NodeTraversal.compiler"
"Internationalization Warning","EI","com.google.javascript.jscomp.NodeTraversal.getCurrentNode() may expose internal representation by returning NodeTraversal.curNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope.getArgumentsVar() may expose internal representation by returning Scope.arguments"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope.getRootNode() may expose internal representation by returning Scope.rootNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope$Var.getNameNode() may expose internal representation by returning Scope$Var.nameNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope$Var.getNode() may expose internal representation by returning Scope$Var.nameNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.Scope$Var.getType() may expose internal representation by returning Scope$Var.type"
"Internationalization Warning","EI","com.google.javascript.jscomp.SideEffectsAnalysis$RawMotionEnvironment.calculateEnvironment() may expose internal representation by returning SideEffectsAnalysis$RawMotionEnvironment.environment"
"Internationalization Warning","EI","com.google.javascript.jscomp.SpecializeModule$SpecializationState.getRemovedFunctions() may expose internal representation by returning SpecializeModule$SpecializationState.removedFunctions"
"Internationalization Warning","EI","com.google.javascript.jscomp.SpecializeModule$SpecializationState.getSpecializedFunctions() may expose internal representation by returning SpecializeModule$SpecializationState.specializedFunctions"
"Internationalization Warning","EI","com.google.javascript.jscomp.SymbolTable.getGlobalScope() may expose internal representation by returning SymbolTable.globalScope"
"Internationalization Warning","EI","com.google.javascript.jscomp.SymbolTable$Symbol.getJSDocInfo() may expose internal representation by returning SymbolTable$Symbol.docInfo"
"Internationalization Warning","EI","com.google.javascript.jscomp.SymbolTable$Symbol.getPropertyScope() may expose internal representation by returning SymbolTable$Symbol.propertyScope"
"Internationalization Warning","EI","com.google.javascript.jscomp.SymbolTable$SymbolScope.getParentScope() may expose internal representation by returning SymbolTable$SymbolScope.parent"
"Internationalization Warning","EI","com.google.javascript.jscomp.SymbolTable$SymbolScope.getRootNode() may expose internal representation by returning SymbolTable$SymbolScope.rootNode"
"Internationalization Warning","EI","com.google.javascript.jscomp.SymbolTable$SymbolScope.getTypeOfThis() may expose internal representation by returning SymbolTable$SymbolScope.typeOfThis"
"Internationalization Warning","EI","com.google.javascript.jscomp.SyntheticAst.getAstRoot(AbstractCompiler) may expose internal representation by returning SyntheticAst.root"
"Internationalization Warning","EI","com.google.javascript.jscomp.SyntheticAst.getSourceFile() may expose internal representation by returning SyntheticAst.sourceFile"
"Internationalization Warning","EI","com.google.javascript.jscomp.deps.DepsFileParser.parseFileReader(String, Reader) may expose internal representation by returning DepsFileParser.depInfos"
"Internationalization Warning","EI","com.google.javascript.jscomp.graph.GraphColoring.getGraph() may expose internal representation by returning GraphColoring.graph"
"Internationalization Warning","EI","com.google.javascript.rhino.JSDocInfo.getAssociatedNode() may expose internal representation by returning JSDocInfo.associatedNode"
"Internationalization Warning","EI","com.google.javascript.rhino.JSDocInfo$Marker.getAnnotation() may expose internal representation by returning JSDocInfo$Marker.annotation"
"Internationalization Warning","EI","com.google.javascript.rhino.JSDocInfo$Marker.getDescription() may expose internal representation by returning JSDocInfo$Marker.description"
"Internationalization Warning","EI","com.google.javascript.rhino.JSDocInfo$Marker.getName() may expose internal representation by returning JSDocInfo$Marker.name"
"Internationalization Warning","EI","com.google.javascript.rhino.JSDocInfo$Marker.getNameNode() may expose internal representation by returning JSDocInfo$Marker.nameNode"
"Internationalization Warning","EI","com.google.javascript.rhino.JSDocInfo$Marker.getType() may expose internal representation by returning JSDocInfo$Marker.type"
"Internationalization Warning","EI","com.google.javascript.rhino.JSTypeExpression.getRoot() may expose internal representation by returning JSTypeExpression.root"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getFirstChild() may expose internal representation by returning Node.first"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getJSType() may expose internal representation by returning Node.jsType"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getLastChild() may expose internal representation by returning Node.last"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getNext() may expose internal representation by returning Node.next"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.getParent() may expose internal representation by returning Node.parent"
"Internationalization Warning","EI","com.google.javascript.rhino.Node.removeFirstChild() may expose internal representation by returning Node.first"
"Internationalization Warning","EI","com.google.javascript.rhino.SimpleErrorReporter.errors() may expose internal representation by returning SimpleErrorReporter.errors"
"Internationalization Warning","EI","com.google.javascript.rhino.SimpleErrorReporter.warnings() may expose internal representation by returning SimpleErrorReporter.warnings"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.EnumElementType.getPrimitiveType() may expose internal representation by returning EnumElementType.primitiveType"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.EnumType.getElementsType() may expose internal representation by returning EnumType.elementsType"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.EnumType.getSource() may expose internal representation by returning EnumType.source"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionParamBuilder.build() may expose internal representation by returning FunctionParamBuilder.root"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getSlot(String) may expose internal representation by returning FunctionType.prototypeSlot"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getSource() may expose internal representation by returning FunctionType.source"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.FunctionType.getSubTypes() may expose internal representation by returning FunctionType.subTypes"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.JSType.resolve(ErrorReporter, StaticScope) may expose internal representation by returning JSType.resolveResult"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.ObjectType.getJSDocInfo() may expose internal representation by returning ObjectType.docInfo"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.ParameterizedType.getParameterType() may expose internal representation by returning ParameterizedType.parameterType"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.Property.getJSDocInfo() may expose internal representation by returning Property.docInfo"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.Property.getNode() may expose internal representation by returning Property.propertyNode"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.Property.getType() may expose internal representation by returning Property.type"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.SimpleReference.getNode() may expose internal representation by returning SimpleReference.node"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.SimpleSlot.getType() may expose internal representation by returning SimpleSlot.type"
"Internationalization Warning","EI","com.google.javascript.rhino.jstype.UnionType.getAlternates() may expose internal representation by returning UnionType.alternates"
"Internationalization Warning","EI2","com.google.debugging.sourcemap.proto.Mapping$LineMapping$Builder.mergeOriginalMapping(Mapping$OriginalMapping) may expose internal representation by storing an externally mutable object into Mapping$LineMapping$Builder.originalMapping_"
"Internationalization Warning","EI2","com.google.debugging.sourcemap.proto.Mapping$LineMapping$Builder.setOriginalMapping(Mapping$OriginalMapping) may expose internal representation by storing an externally mutable object into Mapping$LineMapping$Builder.originalMapping_"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.CallGraph(AbstractCompiler, boolean, boolean) may expose internal representation by storing an externally mutable object into CallGraph.compiler"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.CodingConvention$Bind(Node, Node, Node) may expose internal representation by storing an externally mutable object into CodingConvention$Bind.parameters"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.CodingConvention$Bind(Node, Node, Node) may expose internal representation by storing an externally mutable object into CodingConvention$Bind.target"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.CodingConvention$Bind(Node, Node, Node) may expose internal representation by storing an externally mutable object into CodingConvention$Bind.thisValue"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.Compiler(PrintStream) may expose internal representation by storing an externally mutable object into Compiler.outStream"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.initModules(List, List, CompilerOptions) may expose internal representation by storing an externally mutable object into Compiler.modules"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.initOptions(CompilerOptions) may expose internal representation by storing an externally mutable object into Compiler.options"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.setErrorManager(ErrorManager) may expose internal representation by storing an externally mutable object into Compiler.errorManager"
"Internationalization Warning","EI2","com.google.javascript.jscomp.Compiler.setPassConfig(PassConfig) may expose internal representation by storing an externally mutable object into Compiler.passes"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.CompilerInput(SourceAst, InputId, boolean) may expose internal representation by storing an externally mutable object into CompilerInput.ast"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerInput.setCompiler(AbstractCompiler) may expose internal representation by storing an externally mutable object into CompilerInput.compiler"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerInput.setModule(JSModule) may expose internal representation by storing an externally mutable object into CompilerInput.module"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerOptions.setCssRenamingWhitelist(Set) may expose internal representation by storing an externally mutable object into CompilerOptions.cssRenamingWhitelist"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerOptions.setDefineReplacements(Map) may expose internal representation by storing an externally mutable object into CompilerOptions.defineReplacements"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerOptions.setReplaceStringsFunctionDescriptions(List) may expose internal representation by storing an externally mutable object into CompilerOptions.replaceStringsFunctionDescriptions"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerOptions.setReplaceStringsReservedStrings(Set) may expose internal representation by storing an externally mutable object into CompilerOptions.replaceStringsReservedStrings"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerOptions.setTweakReplacements(Map) may expose internal representation by storing an externally mutable object into CompilerOptions.tweakReplacements"
"Internationalization Warning","EI2","com.google.javascript.jscomp.CompilerOptions.setWarningsGuard(ComposeWarningsGuard) may expose internal representation by storing an externally mutable object into CompilerOptions.warningsGuard"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FieldCleanupPass(AbstractCompiler) may expose internal representation by storing an externally mutable object into FieldCleanupPass.compiler"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes(AbstractCompiler) may expose internal representation by storing an externally mutable object into FindExportableNodes.compiler"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext(Node, Node, Node) may expose internal representation by storing an externally mutable object into FindExportableNodes$GenerateNodeContext.contextNode"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext(Node, Node, Node) may expose internal representation by storing an externally mutable object into FindExportableNodes$GenerateNodeContext.node"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.FindExportableNodes$GenerateNodeContext(Node, Node, Node) may expose internal representation by storing an externally mutable object into FindExportableNodes$GenerateNodeContext.scriptNode"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.JsAst(SourceFile) may expose internal representation by storing an externally mutable object into JsAst.sourceFile"
"Internationalization Warning","EI2","com.google.javascript.jscomp.JsAst.setSourceFile(SourceFile) may expose internal representation by storing an externally mutable object into JsAst.sourceFile"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.JsMessageExtractor(JsMessage$IdGenerator, JsMessage$Style, CompilerOptions) may expose internal representation by storing an externally mutable object into JsMessageExtractor.options"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.LoggerErrorManager(MessageFormatter, Logger) may expose internal representation by storing an externally mutable object into LoggerErrorManager.logger"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.NodeTraversal(AbstractCompiler, NodeTraversal$Callback, ScopeCreator) may expose internal representation by storing an externally mutable object into NodeTraversal.compiler"
"Internationalization Warning","EI2","com.google.javascript.jscomp.NodeTraversal.traverse(Node) may expose internal representation by storing an externally mutable object into NodeTraversal.curNode"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.NodeTraversal$AbstractNodeTypePruningCallback(Set, boolean) may expose internal representation by storing an externally mutable object into NodeTraversal$AbstractNodeTypePruningCallback.nodeTypes"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.PassConfig(CompilerOptions) may expose internal representation by storing an externally mutable object into PassConfig.options"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.PassConfig$State(Map, Set, CrossModuleMethodMotion$IdGenerator, VariableMap, VariableMap, VariableMap, VariableMap, FunctionNames, String) may expose internal representation by storing an externally mutable object into PassConfig$State.cssNames"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.PassConfig$State(Map, Set, CrossModuleMethodMotion$IdGenerator, VariableMap, VariableMap, VariableMap, VariableMap, FunctionNames, String) may expose internal representation by storing an externally mutable object into PassConfig$State.exportedNames"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.PrintStreamErrorManager(MessageFormatter, PrintStream) may expose internal representation by storing an externally mutable object into PrintStreamErrorManager.stream"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.SideEffectsAnalysis$RawMotionEnvironment(Set) may expose internal representation by storing an externally mutable object into SideEffectsAnalysis$RawMotionEnvironment.environment"
"Internationalization Warning","EI2","com.google.javascript.jscomp.SourceMap.setPrefixMappings(List) may expose internal representation by storing an externally mutable object into SourceMap.prefixMappings"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.TypeCheck(AbstractCompiler, ReverseAbstractInterpreter, JSTypeRegistry, Scope, MemoizedScopeCreator, CheckLevel, CheckLevel) may expose internal representation by storing an externally mutable object into TypeCheck.compiler"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.TypeCheck(AbstractCompiler, ReverseAbstractInterpreter, JSTypeRegistry, Scope, MemoizedScopeCreator, CheckLevel, CheckLevel) may expose internal representation by storing an externally mutable object into TypeCheck.scopeCreator"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.TypeCheck(AbstractCompiler, ReverseAbstractInterpreter, JSTypeRegistry, Scope, MemoizedScopeCreator, CheckLevel, CheckLevel) may expose internal representation by storing an externally mutable object into TypeCheck.typeRegistry"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.DepsGenerator(Collection, Collection, DepsGenerator$InclusionStrategy, String, ErrorManager) may expose internal representation by storing an externally mutable object into DepsGenerator.deps"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.DepsGenerator(Collection, Collection, DepsGenerator$InclusionStrategy, String, ErrorManager) may expose internal representation by storing an externally mutable object into DepsGenerator.errorManager"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.DepsGenerator(Collection, Collection, DepsGenerator$InclusionStrategy, String, ErrorManager) may expose internal representation by storing an externally mutable object into DepsGenerator.srcs"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.JsFileLineParser(ErrorManager) may expose internal representation by storing an externally mutable object into JsFileLineParser.errorManager"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.JsFunctionParser(Collection, ErrorManager) may expose internal representation by storing an externally mutable object into JsFunctionParser.functionsToParse"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.SimpleDependencyInfo(String, String, List, List) may expose internal representation by storing an externally mutable object into SimpleDependencyInfo.provides"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.deps.SimpleDependencyInfo(String, String, List, List) may expose internal representation by storing an externally mutable object into SimpleDependencyInfo.requires"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.graph.GraphColoring(AdjacencyGraph) may expose internal representation by storing an externally mutable object into GraphColoring.graph"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.graph.GraphPruner(DiGraph) may expose internal representation by storing an externally mutable object into GraphPruner.graph"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.graph.GraphReachability(DiGraph, Predicate) may expose internal representation by storing an externally mutable object into GraphReachability.graph"
"Internationalization Warning","EI2","new com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter(CodingConvention, JSTypeRegistry) may expose internal representation by storing an externally mutable object into ChainableReverseAbstractInterpreter.typeRegistry"
"Internationalization Warning","EI2","com.google.javascript.rhino.JSDocInfo.setAssociatedNode(Node) may expose internal representation by storing an externally mutable object into JSDocInfo.associatedNode"
"Internationalization Warning","EI2","new com.google.javascript.rhino.JSTypeExpression(Node, String) may expose internal representation by storing an externally mutable object into JSTypeExpression.root"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node(int, Node, Node, Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildBefore(Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToBack(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToBack(Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToFront(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildToFront(Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildrenAfter(Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.addChildrenToFront(Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.removeChildAfter(Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.replaceChild(Node, Node) may expose internal representation by storing an externally mutable object into Node.first"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.replaceChild(Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.replaceChildAfter(Node, Node) may expose internal representation by storing an externally mutable object into Node.last"
"Internationalization Warning","EI2","com.google.javascript.rhino.Node.setJSType(JSType) may expose internal representation by storing an externally mutable object into Node.jsType"
"Internationalization Warning","EI2","new com.google.javascript.rhino.Node$FileLevelJsDocBuilder(Node) may expose internal representation by storing an externally mutable object into Node$FileLevelJsDocBuilder.this$0"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.FunctionBuilder(JSTypeRegistry) may expose internal representation by storing an externally mutable object into FunctionBuilder.registry"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionBuilder.withInferredReturnType(JSType) may expose internal representation by storing an externally mutable object into FunctionBuilder.returnType"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionBuilder.withParamsNode(Node) may expose internal representation by storing an externally mutable object into FunctionBuilder.parametersNode"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionBuilder.withReturnType(JSType) may expose internal representation by storing an externally mutable object into FunctionBuilder.returnType"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionBuilder.withReturnType(JSType, boolean) may expose internal representation by storing an externally mutable object into FunctionBuilder.returnType"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionBuilder.withSourceNode(Node) may expose internal representation by storing an externally mutable object into FunctionBuilder.sourceNode"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionBuilder.withTypeOfThis(JSType) may expose internal representation by storing an externally mutable object into FunctionBuilder.typeOfThis"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.FunctionParamBuilder(JSTypeRegistry) may expose internal representation by storing an externally mutable object into FunctionParamBuilder.registry"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.FunctionType.setSource(Node) may expose internal representation by storing an externally mutable object into FunctionType.source"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.ModificationVisitor(JSTypeRegistry) may expose internal representation by storing an externally mutable object into ModificationVisitor.registry"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.ObjectType.setJSDocInfo(JSDocInfo) may expose internal representation by storing an externally mutable object into ObjectType.docInfo"
"Internationalization Warning","EI2","com.google.javascript.rhino.jstype.Property.setNode(Node) may expose internal representation by storing an externally mutable object into Property.propertyNode"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.RecordTypeBuilder(JSTypeRegistry) may expose internal representation by storing an externally mutable object into RecordTypeBuilder.registry"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.SimpleReference(StaticSlot, Node) may expose internal representation by storing an externally mutable object into SimpleReference.node"
"Internationalization Warning","EI2","new com.google.javascript.rhino.jstype.SimpleSlot(String, JSType, boolean) may expose internal representation by storing an externally mutable object into SimpleSlot.type"
"Internationalization Warning","MS","Public static com.google.debugging.sourcemap.proto.Mapping$LineMapping.getDefaultInstance() may expose internal representation by returning Mapping$LineMapping.defaultInstance"
"Internationalization Warning","MS","Public static com.google.debugging.sourcemap.proto.Mapping$OriginalMapping.getDefaultInstance() may expose internal representation by returning Mapping$OriginalMapping.defaultInstance"
"Internationalization Warning","MS","Public static com.google.javascript.jscomp.FunctionInformationMap.getDefaultInstance() may expose internal representation by returning FunctionInformationMap.defaultInstance"
"Internationalization Warning","MS","Public static com.google.javascript.jscomp.FunctionInformationMap$Entry.getDefaultInstance() may expose internal representation by returning FunctionInformationMap$Entry.defaultInstance"
"Internationalization Warning","MS","Public static com.google.javascript.jscomp.FunctionInformationMap$Module.getDefaultInstance() may expose internal representation by returning FunctionInformationMap$Module.defaultInstance"
"Internationalization Warning","MS","Public static com.google.javascript.jscomp.Instrumentation.getDefaultInstance() may expose internal representation by returning Instrumentation.defaultInstance"
"Internationalization Warning","MS","Public static com.google.javascript.jscomp.parsing.ParserRunner.getReservedVars() may expose internal representation by returning ParserRunner.reservedVars"
"Malicious code vulnerability Warning","Bx","com.google.javascript.jscomp.CompilerOptions.setDefineToNumberLiteral(String, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead"
"Malicious code vulnerability Warning","Bx","com.google.javascript.jscomp.CompilerOptions.setTweakToNumberLiteral(String, int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead"
"Malicious code vulnerability Warning","Bx","Boxing/unboxing to parse a primitive com.google.javascript.rhino.ScriptRuntime.stringToNumber(String, int, int)"
"Malicious code vulnerability Warning","Dm","com.google.javascript.jscomp.CompilerOptions.setDefineToBooleanLiteral(String, boolean) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead"
"Malicious code vulnerability Warning","Dm","com.google.javascript.jscomp.CompilerOptions.setTweakToBooleanLiteral(String, boolean) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead"
"Malicious code vulnerability Warning","SBSC","com.google.javascript.jscomp.CoalesceVariableNames.visit(NodeTraversal, Node, Node) concatenates strings using + in a loop"
"Malicious code vulnerability Warning","SBSC","com.google.javascript.jscomp.NameGenerator.generateNextName() concatenates strings using + in a loop"
"Malicious code vulnerability Warning","SBSC","com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocToken) concatenates strings using + in a loop"
"Malicious code vulnerability Warning","SIC","Should com.google.debugging.sourcemap.SourceMapConsumerV1$FileName be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.debugging.sourcemap.SourceMapGeneratorV1$UsedMappingCheck be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.debugging.sourcemap.SourceMapGeneratorV2$UsedMappingCheck be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.debugging.sourcemap.SourceMapGeneratorV3$UsedMappingCheck be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.AmbiguateProperties$PropertyGraphNode be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.AnalyzePrototypeProperties$GlobalFunction be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.AnalyzePrototypeProperties$NameContext be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.CheckUnreachableCode$ReachablePredicate be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.ClosureRewriteClass$ClassDefinition be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.CreateSyntheticBlocks$Marker be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.CrossModuleCodeMotion$Declaration be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.InlineVariables$IdentifyConstants be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.InlineVariables$IdentifyLocals be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.NameReferenceGraphReport$DiGraphNodeComparator be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.Normalize$ScopeTicklingCallback be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.PerformanceTracker$CmpEntries be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.ProcessClosurePrimitives$UnrecognizedRequire be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.RenameProperties$Property be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.RenameProperties$PropertyAffinity be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.ReplaceStrings$Config be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.ReplaceStrings$Location be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.ScopedAliases$AliasedNode be a _static_ inner class?"
"Malicious code vulnerability Warning","SIC","Should com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode be a _static_ inner class?"
"Malicious code vulnerability Warning","SS","Unread field: com.google.javascript.jscomp.ReplaceStrings.DEFAULT_PLACEHOLDER_TOKEN; should this field be static?"
"Malicious code vulnerability Warning","UrF","Unread field: com.google.javascript.jscomp.CommandLineRunner$Flags.jscomp_error"
"Malicious code vulnerability Warning","UrF","Unread field: com.google.javascript.jscomp.CommandLineRunner$Flags.jscomp_off"
"Malicious code vulnerability Warning","UrF","Unread field: com.google.javascript.jscomp.CommandLineRunner$Flags.jscomp_warning"
"Malicious code vulnerability Warning","UrF","Unread field: com.google.javascript.jscomp.InferJSDocInfo.inExterns"
"Malicious code vulnerability Warning","UrF","Unread field: com.google.javascript.jscomp.NameAnalyzer$JsNameRefNode.node"
"Malicious code vulnerability Warning","WMI","com.google.javascript.jscomp.SpecializeModule.addDummyVarDeclarationsToInitialModule(JSModule) makes inefficient use of keySet iterator instead of entrySet iterator"
"Malicious code vulnerability Warning","WMI","com.google.javascript.jscomp.SpecializeModule.replaceOriginalModuleInputsWithSpecialized() makes inefficient use of keySet iterator instead of entrySet iterator"
"Malicious code vulnerability Warning","WMI","com.google.javascript.jscomp.Tracer$ThreadTrace.toString() makes inefficient use of keySet iterator instead of entrySet iterator"
"Malicious code vulnerability Warning","WMI","new com.google.javascript.rhino.jstype.RecordType(JSTypeRegistry, Map, boolean) makes inefficient use of keySet iterator instead of entrySet iterator"
"Performance Warning","DB","com.google.javascript.jscomp.InlineProperties$GatherCandidates.visit(NodeTraversal, Node, Node) uses the same code for two branches"
"Performance Warning","DLS","Dead store to rhs in com.google.javascript.jscomp.CheckGlobalThis.shouldTraverse(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to greatGreatGramps in com.google.javascript.jscomp.CollapseProperties.updateSimpleDeclaration(String, GlobalNamespace$Name, GlobalNamespace$Ref)"
"Performance Warning","DLS","Dead store to scope in com.google.javascript.jscomp.DisambiguateProperties.process(Node, Node)"
"Performance Warning","DLS","Dead store to functionJSDocInfo in com.google.javascript.jscomp.ExternExportsPass$Export.checkForFunctionsWithUnknownTypes(Node)"
"Performance Warning","DLS","Dead store to defs in com.google.javascript.jscomp.FlowSensitiveInlineVariables$GatherCandiates.visit(NodeTraversal, Node, Node)"
"Performance Warning","DLS","Dead store to info in com.google.javascript.jscomp.GlobalNamespace$Name.isSimpleStubDeclaration()"
"Performance Warning","DLS","Dead store to decomposer in com.google.javascript.jscomp.InlineFunctions.decomposeExpressions(Set)"
"Performance Warning","DLS","Dead store to newCode in com.google.javascript.jscomp.InlineFunctions$Inline.inlineFunction(NodeTraversal, Node, InlineFunctions$FunctionState, FunctionInjector$InliningMode)"
"Performance Warning","DLS","Dead store to rhs in com.google.javascript.jscomp.LiveVariablesAnalysis.computeGenKill(Node, BitSet, BitSet, boolean)"
"Performance Warning","DLS","Dead store to parent in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldArrayAccess(Node, Node, Node)"
"Performance Warning","DLS","Dead store to increment in com.google.javascript.jscomp.PeepholeRemoveDeadCode.tryFoldFor(Node)"
"Performance Warning","DLS","Dead store to init in com.google.javascript.jscomp.PeepholeRemoveDeadCode.tryFoldFor(Node)"
"Performance Warning","DLS","Dead store to cond in com.google.javascript.jscomp.PeepholeRemoveDeadCode.tryFoldIf(Node)"
"Performance Warning","DLS","Dead store to name in com.google.javascript.jscomp.PureFunctionIdentifier$SideEffectPropagationCallback.traverseEdge(PureFunctionIdentifier$FunctionInformation, Node, PureFunctionIdentifier$FunctionInformation)"
"Performance Warning","DLS","Dead store to varName in com.google.javascript.jscomp.TypeInference.traverseCatch(Node, FlowScope)"
"Performance Warning","DLS","Dead store to isExtern in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.defineSlot(Node, Node, String, JSType, boolean)"
"Performance Warning","DLS","Dead store to body in com.google.javascript.jscomp.TypedScopeCreator$LocalScopeBuilder.declareArguments(Node)"
"Performance Warning","DLS","Dead store to uNode in com.google.javascript.jscomp.graph.LinkedUndirectedGraph.getNeighborNodes(Object)"
"Performance Warning","DLS","Dead store to token in com.google.javascript.jscomp.parsing.JsDocInfoParser.parseResultType(JsDocToken)"
"Performance Warning","DLS","Dead store to arrayPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to booleanPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to datePrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to numberPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to regexpPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to stringPrototype in com.google.javascript.rhino.jstype.JSTypeRegistry.initializeBuiltInTypes()"
"Performance Warning","DLS","Dead store to originalSlot in com.google.javascript.rhino.jstype.ObjectType.defineInferredProperty(String, JSType, Node)"
"Performance Warning","DLS","Dead store to alternateTypeParameter in com.google.javascript.rhino.jstype.UnionTypeBuilder.addAlternate(JSType)"
"Performance Warning","ICAST","Integral division result cast to double or float in com.google.javascript.jscomp.CodeConsumer.addNumber(double)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.JsMessageVisitor.checkNode(Node, int)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.JsMessageVisitor.extractFromCallNode(JsMessage$Builder, Node)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.ReplaceMessages.constructStringExprNode(Iterator, Node)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.ScopedAliases$Traversal.getSourceRegion(Node)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.createEnumTypeFromNodes(Node, String, JSDocInfo, Node)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.graph.LinkedDirectedGraph.getDirectedPredNodes(DiGraph$DiGraphNode)"
"Performance Warning","NP","Load of known null value in com.google.javascript.jscomp.graph.LinkedDirectedGraph.getDirectedSuccNodes(DiGraph$DiGraphNode)"
"Performance Warning","RCN","Redundant nullcheck of newRoot, which is known to be non-null in com.google.javascript.jscomp.Compiler.addNewSourceAst(JsAst)"
"Performance Warning","RCN","Redundant nullcheck of newRoot, which is known to be non-null in com.google.javascript.jscomp.Compiler.replaceIncrementalSourceAst(JsAst)"
"Performance Warning","RCN","Redundant nullcheck of key, which is known to be non-null in com.google.javascript.jscomp.ExpandJqueryAliases.tryExpandJqueryEachCall(NodeTraversal, Node, Node, List, List)"
"Performance Warning","RCN","Redundant nullcheck of com.google.javascript.jscomp.GlobalNamespace$Name.refs, which is known to be non-null in com.google.javascript.jscomp.GlobalNamespace$Name.removeRef(GlobalNamespace$Ref)"
"Performance Warning","RCN","Redundant nullcheck of next which is known to be null in com.google.javascript.jscomp.ScopedAliases$Traversal.getSourceRegion(Node)"
"Performance Warning","RCN","Redundant nullcheck of valueType, which is known to be non-null in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.isQualifiedNameInferred(String, Node, JSDocInfo, Node, JSType)"
"Performance Warning","RCN","Redundant nullcheck of sourceName, which is known to be non-null in com.google.javascript.rhino.SimpleErrorReporter.formatDetailedMessage(String, String, int, int)"
"Performance Warning","RV","Return value of com.google.javascript.rhino.jstype.StaticSlot.getType() ignored, but method has no side effect"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.AliasExternals$GetAliasableNames.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.AmbiguateProperties$ProcessProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.AnonymousFunctionNamingCallback.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckAccessControls.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckProvides$CheckProvidesCallback.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckRequiresForConstructors$CheckRequiresForConstructorsCallback.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckSuspiciousCode.checkMissingSemicolon(NodeTraversal, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CheckSuspiciousCode.checkNaN(NodeTraversal, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CodeGenerator.jsString(String, boolean) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.CollapseProperties.updateObjLitOrFunctionDeclaration(GlobalNamespace$Name, String, boolean) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ControlFlowAnalysis.shouldTraverse(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ControlStructureCheck.check(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ConvertToDottedProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ExternExportsPass.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FindExportableNodes.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.FunctionArgumentInjector.gatherLocalNames(Node, Set) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.GoogleJsMessageIdGenerator$FP.hash32(byte[], int, int, int) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InferJSDocInfo.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InlineFunctions$CallVisitor.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InlineFunctions$FindCandidateFunctions.findFunctionExpressions(NodeTraversal, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.InlineFunctions$FindCandidateFunctions.findNamedFunctions(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.JsMessage$Hash.hash64(byte[], int, int, long) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MakeDeclaredNamesUnique.shouldTraverse(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MakeDeclaredNamesUnique.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MethodCompilerPass$GatherSignatures.processPrototypeParent(NodeTraversal, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.MinimizeExitPoints.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.NameAnalyzer$FindDependencyScopes.recordConsumers(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.NameReferenceGraphConstruction$Traversal.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.Normalize$NormalizeStatements.extractForInitializer(Node, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.Normalize$NormalizeStatements.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryFoldTypeof(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.PeepholeFoldConstants.tryReduceOperandsForOp(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.makeForwardSlashBracketSafe(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax.tryReduceReturn(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.PrepareAst$PrepareAnnotations.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ProcessClosurePrimitives.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ProcessDefines$CollectDefines.updateAssignAllowedStack(Node, boolean) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.ProcessTweaks$CollectTweaks.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RemoveUnusedClassProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RemoveUnusedVars.traverseNode(Node, Node, Scope) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RenameLabels$ProcessLabels.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RenameProperties$ProcessProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.RenamePrototypes$ProcessExternedProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.StripCode$Strip.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.SyntacticScopeCreator.scanVars(Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TightenTypes$CreateScope.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.Tracer.appendSpaces(StringBuilder, int) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeCheck.visit(NodeTraversal, Node, Node) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeCheck.checkNoTypeCheckSection(Node, boolean) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeCheck.shouldTraverse(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeInference.branchedFlowThrough(Node, FlowScope) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeInference.traverse(Node, FlowScope) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypeInference.updateScopeForTypeChange(FlowScope, Node, JSType, JSType) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.attachLiteralTypes(NodeTraversal, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder$CollectProperties.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$DiscoverEnumsAndTypedefs.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.TypedScopeCreator$GlobalScopeBuilder.visit(NodeTraversal, Node, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.UnreachableCodeElimination$EliminationPass.removeDeadExprStatementSafely(Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.parsing.IRFactory.validateTypeAnnotations(JSDocInfo, AstNode, Node) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.parsing.JsDocInfoParser.parse() where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.jscomp.parsing.JsDocTokenStream.getJsDocToken() where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.ScriptRuntime.stringToNumber(String, int, int) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.ScriptRuntime.escapeString(String, char) where default case is missing"
"Performance Warning","SF","Switch statement found in com.google.javascript.rhino.ScriptRuntime.stringToNumber(String, int, int) where default case is missing"
"Performance Warning","UCF","Useless control flow in com.google.debugging.sourcemap.proto.Mapping$OriginalMapping$Builder.maybeForceBuilderInitialization()"
"Performance Warning","UCF","Useless control flow in com.google.javascript.jscomp.FunctionInformationMap$Entry$Builder.maybeForceBuilderInitialization()"
"Performance Warning","UCF","Useless control flow in com.google.javascript.jscomp.FunctionInformationMap$Module$Builder.maybeForceBuilderInitialization()"
"Performance Warning","UCF","Useless control flow in com.google.javascript.jscomp.Instrumentation$Builder.maybeForceBuilderInitialization()"
