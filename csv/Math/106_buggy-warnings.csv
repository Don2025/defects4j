"Warning Type","Code","Warning"
"Bad practice Warning","DMI","Random object created and used only once in org.apache.commons.math.random.RandomDataImpl.getSecRan()"
"Bad practice Warning","DMI","Random object created and used only once in org.apache.commons.math.random.RandomDataImpl.reSeedSecure()"
"Bad practice Warning","DMI","Random object created and used only once in org.apache.commons.math.random.RandomDataImpl.reSeedSecure(long)"
"Bad practice Warning","Se","org.apache.commons.math.stat.Frequency$NaturalComparator implements Comparator but not Serializable"
"Correctness Warning","FL","Using floating-point loop counters can lead to unexpected behavior."
"Dodgy code Warning","Dm","Found reliance on default encoding in org.apache.commons.math.MathException.printStackTrace(PrintStream): new java.io.PrintWriter(OutputStream, boolean)"
"Dodgy code Warning","Dm","Found reliance on default encoding in org.apache.commons.math.random.EmpiricalDistributionImpl.load(File): new java.io.FileReader(File)"
"Dodgy code Warning","Dm","Found reliance on default encoding in org.apache.commons.math.random.EmpiricalDistributionImpl.load(URL): new java.io.InputStreamReader(InputStream)"
"Dodgy code Warning","Dm","Found reliance on default encoding in org.apache.commons.math.random.ValueServer.resetReplayFile(): new java.io.InputStreamReader(InputStream)"
"Internationalization Warning","EI","org.apache.commons.math.MathException.getCause() may expose internal representation by returning MathException.rootCause"
"Internationalization Warning","EI","org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat() may expose internal representation by returning ComplexFormat.imaginaryFormat"
"Internationalization Warning","EI","org.apache.commons.math.complex.ComplexFormat.getRealFormat() may expose internal representation by returning ComplexFormat.realFormat"
"Internationalization Warning","EI","org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat() may expose internal representation by returning FractionFormat.denominatorFormat"
"Internationalization Warning","EI","org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat() may expose internal representation by returning FractionFormat.numeratorFormat"
"Internationalization Warning","EI","org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat() may expose internal representation by returning ProperFractionFormat.wholeFormat"
"Internationalization Warning","EI","org.apache.commons.math.linear.BigMatrixImpl.getDataRef() may expose internal representation by returning BigMatrixImpl.data"
"Internationalization Warning","EI","org.apache.commons.math.linear.RealMatrixImpl.getDataRef() may expose internal representation by returning RealMatrixImpl.data"
"Internationalization Warning","EI","org.apache.commons.math.random.EmpiricalDistributionImpl.getBinStats() may expose internal representation by returning EmpiricalDistributionImpl.binStats"
"Internationalization Warning","EI","org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats() may expose internal representation by returning EmpiricalDistributionImpl.sampleStats"
"Internationalization Warning","EI","org.apache.commons.math.util.ResizableDoubleArray.getValues() may expose internal representation by returning ResizableDoubleArray.internalArray"
"Internationalization Warning","EI2","new org.apache.commons.math.MathException(String, Throwable) may expose internal representation by storing an externally mutable object into MathException.rootCause"
"Internationalization Warning","EI2","new org.apache.commons.math.MathException(Throwable) may expose internal representation by storing an externally mutable object into MathException.rootCause"
"Internationalization Warning","EI2","org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(NumberFormat) may expose internal representation by storing an externally mutable object into ComplexFormat.imaginaryFormat"
"Internationalization Warning","EI2","org.apache.commons.math.complex.ComplexFormat.setRealFormat(NumberFormat) may expose internal representation by storing an externally mutable object into ComplexFormat.realFormat"
"Internationalization Warning","EI2","new org.apache.commons.math.fraction.FractionFormat(NumberFormat, NumberFormat) may expose internal representation by storing an externally mutable object into FractionFormat.denominatorFormat"
"Internationalization Warning","EI2","new org.apache.commons.math.fraction.FractionFormat(NumberFormat, NumberFormat) may expose internal representation by storing an externally mutable object into FractionFormat.numeratorFormat"
"Internationalization Warning","EI2","org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(NumberFormat) may expose internal representation by storing an externally mutable object into FractionFormat.denominatorFormat"
"Internationalization Warning","EI2","org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(NumberFormat) may expose internal representation by storing an externally mutable object into FractionFormat.numeratorFormat"
"Internationalization Warning","EI2","org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(NumberFormat) may expose internal representation by storing an externally mutable object into ProperFractionFormat.wholeFormat"
"Internationalization Warning","EI2","new org.apache.commons.math.random.RandomAdaptor(RandomGenerator) may expose internal representation by storing an externally mutable object into RandomAdaptor.randomGenerator"
"Internationalization Warning","EI2","new org.apache.commons.math.random.RandomDataImpl(RandomGenerator) may expose internal representation by storing an externally mutable object into RandomDataImpl.rand"
"Internationalization Warning","EI2","new org.apache.commons.math.stat.descriptive.moment.Kurtosis(FourthMoment) may expose internal representation by storing an externally mutable object into Kurtosis.moment"
"Internationalization Warning","EI2","new org.apache.commons.math.stat.descriptive.moment.Mean(FirstMoment) may expose internal representation by storing an externally mutable object into Mean.moment"
"Internationalization Warning","EI2","new org.apache.commons.math.stat.descriptive.moment.Skewness(ThirdMoment) may expose internal representation by storing an externally mutable object into Skewness.moment"
"Internationalization Warning","EI2","new org.apache.commons.math.stat.descriptive.moment.Variance(SecondMoment) may expose internal representation by storing an externally mutable object into Variance.moment"
"Internationalization Warning","EI2","new org.apache.commons.math.stat.descriptive.moment.Variance(boolean, SecondMoment) may expose internal representation by storing an externally mutable object into Variance.moment"
"Internationalization Warning","MS","org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL isn't final but should be"
"Internationalization Warning","MS","org.apache.commons.math.linear.RealMatrixImpl.TOO_SMALL isn't final but should be"
"Internationalization Warning","REFLC","Public method org.apache.commons.math.stat.descriptive.DescriptiveStatistics.newInstance(Class) uses reflection to create a class it gets in its parameter which could increase the accessibility of any class"
"Internationalization Warning","REFLC","Public method org.apache.commons.math.stat.descriptive.SummaryStatistics.newInstance(Class) uses reflection to create a class it gets in its parameter which could increase the accessibility of any class"
"Malicious code vulnerability Warning","IS","Inconsistent synchronization of org.apache.commons.math.util.ResizableDoubleArray.initialCapacity; locked 50% of time"
"Multithreaded correctness Warning","Bx","Primitive value is boxed and then immediately unboxed in org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(Object)"
"Multithreaded correctness Warning","Bx","Boxing/unboxing to parse a primitive org.apache.commons.math.random.EmpiricalDistributionImpl$StreamDataAdapter.computeStats()"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.random.RandomDataImpl.nextHexString(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead"
"Multithreaded correctness Warning","Bx","Boxing/unboxing to parse a primitive org.apache.commons.math.random.ValueServer.getNextReplay()"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.addValue(char) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.addValue(int) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.addValue(long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.addValue(Integer) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.addValue(Object) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCount(char) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCount(int) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCount(long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCumFreq(char) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCumFreq(int) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCumFreq(long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCumPct(char) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCumPct(int) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getCumPct(long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getPct(char) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getPct(int) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","org.apache.commons.math.stat.Frequency.getPct(long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead"
"Multithreaded correctness Warning","Bx","Boxing/unboxing to parse a primitive org.apache.commons.math.util.DefaultTransformer.transform(Object)"
"Performance Warning","ICAST","Integral division result cast to double or float in org.apache.commons.math.util.ResizableDoubleArray.shouldContract()"
"Performance Warning","NP","Dereference of the result of readLine() without nullcheck in org.apache.commons.math.random.ValueServer.getNextReplay()"
