"Warning Type","Code","Warning"
"Bad practice Warning","CN","Class org.apache.commons.lang.text.StrBuilder implements Cloneable but does not define or use clone method"
"Bad practice Warning","CN","org.apache.commons.lang.text.StrTokenizer.clone() does not call super.clone()"
"Bad practice Warning","ES","Comparison of String parameter using == or != in org.apache.commons.lang.BooleanUtils.toBoolean(String)"
"Bad practice Warning","ES","Comparison of String parameter using == or != in org.apache.commons.lang.StringUtils.indexOfDifference(String, String)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.format(DurationFormatUtils$Token[], int, int, int, int, int, int, int, boolean)"
"Bad practice Warning","ES","Comparison of String objects using == or != in org.apache.commons.lang.time.DurationFormatUtils.lexx(String)"
"Bad practice Warning","NP","org.apache.commons.lang.BooleanUtils.negate(Boolean) has Boolean return type and returns explicit null"
"Bad practice Warning","NP","org.apache.commons.lang.BooleanUtils.toBooleanObject(int, int, int, int) has Boolean return type and returns explicit null"
"Bad practice Warning","NP","org.apache.commons.lang.BooleanUtils.toBooleanObject(Integer) has Boolean return type and returns explicit null"
"Bad practice Warning","NP","org.apache.commons.lang.BooleanUtils.toBooleanObject(Integer, Integer, Integer, Integer) has Boolean return type and returns explicit null"
"Bad practice Warning","NP","org.apache.commons.lang.BooleanUtils.toBooleanObject(String) has Boolean return type and returns explicit null"
"Bad practice Warning","NP","org.apache.commons.lang.BooleanUtils.toBooleanObject(String, String, String, String) has Boolean return type and returns explicit null"
"Bad practice Warning","Se","Class org.apache.commons.lang.time.FastDateFormat defines non-transient non-serializable instance field mRules"
"Correctness Warning","Eq","org.apache.commons.lang.enum.Enum.equals(Object) compares class names rather than class objects"
"Correctness Warning","Eq","org.apache.commons.lang.enums.Enum.equals(Object) compares class names rather than class objects"
"Dodgy code Warning","Dm","Found reliance on default encoding in org.apache.commons.lang.exception.NestableDelegate.printStackTrace(PrintStream): new java.io.PrintWriter(OutputStream, boolean)"
"Internationalization Warning","EI","org.apache.commons.lang.NotImplementedException.getCause() may expose internal representation by returning NotImplementedException.cause"
"Internationalization Warning","EI","org.apache.commons.lang.builder.ReflectionToStringBuilder.getExcludeFieldNames() may expose internal representation by returning ReflectionToStringBuilder.excludeFieldNames"
"Internationalization Warning","EI","org.apache.commons.lang.builder.ToStringBuilder.getStringBuffer() may expose internal representation by returning ToStringBuilder.buffer"
"Internationalization Warning","EI","org.apache.commons.lang.builder.ToStringBuilder.getStyle() may expose internal representation by returning ToStringBuilder.style"
"Internationalization Warning","EI","org.apache.commons.lang.exception.NestableDelegate.getThrowable(int) may expose internal representation by returning NestableDelegate.nestable"
"Internationalization Warning","EI","org.apache.commons.lang.exception.NestableError.getCause() may expose internal representation by returning NestableError.cause"
"Internationalization Warning","EI","org.apache.commons.lang.exception.NestableException.getCause() may expose internal representation by returning NestableException.cause"
"Internationalization Warning","EI","org.apache.commons.lang.exception.NestableRuntimeException.getCause() may expose internal representation by returning NestableRuntimeException.cause"
"Internationalization Warning","EI","org.apache.commons.lang.time.FastDateFormat.getTimeZone() may expose internal representation by returning FastDateFormat.mTimeZone"
"Internationalization Warning","EI2","new org.apache.commons.lang.NotImplementedException(String, Throwable) may expose internal representation by storing an externally mutable object into NotImplementedException.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.NotImplementedException(Throwable) may expose internal representation by storing an externally mutable object into NotImplementedException.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableDelegate(Nestable) may expose internal representation by storing an externally mutable object into NestableDelegate.nestable"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableError(String, Throwable) may expose internal representation by storing an externally mutable object into NestableError.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableError(Throwable) may expose internal representation by storing an externally mutable object into NestableError.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableException(String, Throwable) may expose internal representation by storing an externally mutable object into NestableException.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableException(Throwable) may expose internal representation by storing an externally mutable object into NestableException.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableRuntimeException(String, Throwable) may expose internal representation by storing an externally mutable object into NestableRuntimeException.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.exception.NestableRuntimeException(Throwable) may expose internal representation by storing an externally mutable object into NestableRuntimeException.cause"
"Internationalization Warning","EI2","new org.apache.commons.lang.text.StrTokenizer(char[]) may expose internal representation by storing an externally mutable object into StrTokenizer.chars"
"Internationalization Warning","EI2","org.apache.commons.lang.text.StrTokenizer.reset(char[]) may expose internal representation by storing an externally mutable object into StrTokenizer.chars"
"Internationalization Warning","MS","org.apache.commons.lang.CharSet.COMMON is a mutable collection which should be package protected"
"Internationalization Warning","MS","Public static org.apache.commons.lang.LocaleUtils.availableLocaleList() may expose internal representation by returning LocaleUtils.cAvailableLocaleList"
"Internationalization Warning","MS","org.apache.commons.lang.builder.ToStringBuilder.setDefaultStyle(ToStringStyle) may expose internal static state by storing a mutable object into a static field org.apache.commons.lang.builder.ToStringBuilder.defaultStyle"
"Internationalization Warning","MS","Public static org.apache.commons.lang.builder.ToStringBuilder.getDefaultStyle() may expose internal representation by returning ToStringBuilder.defaultStyle"
"Internationalization Warning","MS","org.apache.commons.lang.exception.NestableDelegate.matchSubclasses isn't final but should be"
"Internationalization Warning","MS","org.apache.commons.lang.exception.NestableDelegate.topDown isn't final but should be"
"Internationalization Warning","MS","org.apache.commons.lang.exception.NestableDelegate.trimStackFrames isn't final but should be"
"Malicious code vulnerability Warning","Dm","org.apache.commons.lang.math.JVMRandom.nextInt(int) uses the nextDouble method of Random to generate a random integer; using nextInt is more efficient"
"Malicious code vulnerability Warning","UrF","Unread field: org.apache.commons.lang.IntHashMap$Entry.key"
"Performance Warning","DCN","Do not catch NullPointerException like in org.apache.commons.lang.BooleanUtils.xor(Boolean[])"
"Performance Warning","IM","Computation of average could overflow in org.apache.commons.lang.Entities$BinaryEntityMap.binarySearch(int)"
"Performance Warning","REC","Exception is caught when Exception is not thrown in org.apache.commons.lang.exception.ExceptionUtils.<static initializer for ExceptionUtils>()"
"Performance Warning","SF","Switch statement found in org.apache.commons.lang.NumberUtils.createNumber(String) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in org.apache.commons.lang.NumberUtils.createNumber(String) where default case is missing"
"Performance Warning","SF","Switch statement found in org.apache.commons.lang.math.NumberUtils.createNumber(String) where one case falls through to the next case"
"Performance Warning","SF","Switch statement found in org.apache.commons.lang.math.NumberUtils.createNumber(String) where default case is missing"
"Performance Warning","SF","Switch statement found in org.apache.commons.lang.time.DateUtils.iterator(Calendar, int) where default case is missing"
"Performance Warning","SF","Switch statement found in org.apache.commons.lang.time.DateUtils.modify(Calendar, int, boolean) where default case is missing"
